// Package collectorapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package collectorapi

// Defines values for FlowAggregatePairType.
const (
	FlowAggregatePairTypePROCESS      FlowAggregatePairType = "PROCESS"
	FlowAggregatePairTypePROCESSGROUP FlowAggregatePairType = "PROCESS_GROUP"
	FlowAggregatePairTypeSITE         FlowAggregatePairType = "SITE"
)

// Defines values for OperStatusType.
const (
	OperStatusTypeDown OperStatusType = "down"
	OperStatusTypeUp   OperStatusType = "up"
)

// AddressListResponse defines model for AddressListResponse.
type AddressListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]AddressRecord `json:"results,omitempty"`
}

// AddressRecord defines model for AddressRecord.
type AddressRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	ConnectorCount int    `json:"connectorCount"`
	ListenerCount  int    `json:"listenerCount"`
	Name           string `json:"name"`
	Protocol       string `json:"protocol"`
}

// AddressResponse defines model for AddressResponse.
type AddressResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *AddressRecord `json:"results,omitempty"`
}

// ConnectorListResponse defines model for ConnectorListResponse.
type ConnectorListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]ConnectorRecord `json:"results,omitempty"`
}

// ConnectorRecord defines model for ConnectorRecord.
type ConnectorRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Address   string  `json:"address"`
	AddressId *string `json:"addressId,omitempty"`
	DestHost  string  `json:"destHost"`
	DestPort  string  `json:"destPort"`
	Name      string  `json:"name"`
	ProcessId string  `json:"processId"`
	Protocol  string  `json:"protocol"`
	Target    string  `json:"target"`
}

// ConnectorResponse defines model for ConnectorResponse.
type ConnectorResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *ConnectorRecord `json:"results,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse = BaseResponse

// FlowAggregateListResponse defines model for FlowAggregateListResponse.
type FlowAggregateListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]FlowAggregateRecord `json:"results,omitempty"`
}

// FlowAggregateRecord defines model for FlowAggregateRecord.
type FlowAggregateRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	DestinationId       string                `json:"destinationId"`
	DestinationName     string                `json:"destinationName"`
	DestinationSiteId   *string               `json:"destinationSiteId,omitempty"`
	DestinationSiteName *string               `json:"destinationSiteName,omitempty"`
	PairType            FlowAggregatePairType `json:"pairType"`
	Protocol            string                `json:"protocol"`
	RecordCount         uint64                `json:"recordCount"`
	SourceId            string                `json:"sourceId"`
	SourceName          string                `json:"sourceName"`
	SourceSiteId        *string               `json:"sourceSiteId,omitempty"`
	SourceSiteName      *string               `json:"sourceSiteName,omitempty"`
}

// FlowAggregateResponse defines model for FlowAggregateResponse.
type FlowAggregateResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *FlowAggregateRecord `json:"results,omitempty"`
}

// ListenerListResponse defines model for ListenerListResponse.
type ListenerListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]ListenerRecord `json:"results,omitempty"`
}

// ListenerRecord defines model for ListenerRecord.
type ListenerRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Address   string  `json:"address"`
	AddressId *string `json:"addressId,omitempty"`
	DestHost  string  `json:"destHost"`
	DestPort  string  `json:"destPort"`
	Name      string  `json:"name"`
	Protocol  string  `json:"protocol"`
}

// ListenerResponse defines model for ListenerResponse.
type ListenerResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *ListenerRecord `json:"results,omitempty"`
}

// ProcessListResponse defines model for ProcessListResponse.
type ProcessListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]ProcessRecord `json:"results,omitempty"`
}

// ProcessRecord defines model for ProcessRecord.
type ProcessRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Addresses      *[]string `json:"addresses,omitempty"`
	GroupIdentity  *string   `json:"groupIdentity,omitempty"`
	GroupName      *string   `json:"groupName,omitempty"`
	HostName       *string   `json:"hostName,omitempty"`
	Image          *string   `json:"image,omitempty"`
	ImageName      *string   `json:"imageName,omitempty"`
	Name           *string   `json:"name,omitempty"`
	ParentName     *string   `json:"parentName,omitempty"`
	ProcessBinding *string   `json:"processBinding,omitempty"`
	ProcessRole    *string   `json:"processRole,omitempty"`
	SourceHost     *string   `json:"sourceHost,omitempty"`
}

// ProcessResponse defines model for ProcessResponse.
type ProcessResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *ProcessRecord `json:"results,omitempty"`
}

// RouterAccessListResponse defines model for RouterAccessListResponse.
type RouterAccessListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]RouterAccessRecord `json:"results,omitempty"`
}

// RouterAccessRecord defines model for RouterAccessRecord.
type RouterAccessRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	LinkCount uint64 `json:"linkCount"`
	Name      string `json:"name"`
	Role      string `json:"role"`
}

// RouterAccessResponse defines model for RouterAccessResponse.
type RouterAccessResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *RouterAccessRecord `json:"results,omitempty"`
}

// RouterLinkListResponse defines model for RouterLinkListResponse.
type RouterLinkListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]RouterLinkRecord `json:"results,omitempty"`
}

// RouterLinkRecord defines model for RouterLinkRecord.
type RouterLinkRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	DestinationSiteId string         `json:"destinationSiteId"`
	LinkCost          uint64         `json:"linkCost"`
	Name              string         `json:"name"`
	Octets            uint64         `json:"octets"`
	OctetsReverse     uint64         `json:"octetsReverse"`
	Peer              string         `json:"peer"`
	Role              string         `json:"role"`
	SourceSiteId      string         `json:"sourceSiteId"`
	Status            OperStatusType `json:"status"`
}

// RouterLinkResponse defines model for RouterLinkResponse.
type RouterLinkResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *RouterLinkRecord `json:"results,omitempty"`
}

// RouterListResponse defines model for RouterListResponse.
type RouterListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]RouterRecord `json:"results,omitempty"`
}

// RouterRecord defines model for RouterRecord.
type RouterRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	BuildVersion *string `json:"buildVersion,omitempty"`
	HostName     *string `json:"hostName,omitempty"`
	ImageName    *string `json:"imageName,omitempty"`
	ImageVersion *string `json:"imageVersion,omitempty"`
	Mode         *string `json:"mode,omitempty"`
	Name         *string `json:"name,omitempty"`
	Namespace    *string `json:"namespace,omitempty"`
}

// RouterResponse defines model for RouterResponse.
type RouterResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *RouterRecord `json:"results,omitempty"`
}

// SiteListResponse defines model for SiteListResponse.
type SiteListResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *[]SiteRecord `json:"results,omitempty"`
}

// SiteRecord defines model for SiteRecord.
type SiteRecord struct {
	// Embedded struct due to allOf(#/components/schemas/baseRecord)
	BaseRecord `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Location    *string `json:"location,omitempty"`
	Name        *string `json:"name,omitempty"`
	NameSpace   *string `json:"nameSpace,omitempty"`
	Platform    *string `json:"platform,omitempty"`
	Policy      *string `json:"policy,omitempty"`
	Provider    *string `json:"provider,omitempty"`
	SiteVersion *string `json:"siteVersion,omitempty"`
}

// SiteResponse defines model for SiteResponse.
type SiteResponse struct {
	// Embedded struct due to allOf(#/components/schemas/baseResponse)
	BaseResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Results *SiteRecord `json:"results,omitempty"`
}

// BaseRecord defines model for baseRecord.
type BaseRecord struct {
	EndTime   uint64  `json:"endTime"`
	Identity  string  `json:"identity"`
	Parent    *string `json:"parent,omitempty"`
	Source    *string `json:"source,omitempty"`
	StartTime uint64  `json:"startTime"`
}

// BaseResponse defines model for baseResponse.
type BaseResponse struct {
	// Count todo
	Count int64 `json:"count"`

	// Status todo
	Status string `json:"status"`

	// TimeRangeCount todo
	TimeRangeCount *int64 `json:"timeRangeCount,omitempty"`

	// TotalCount todo
	TotalCount *int64 `json:"totalCount,omitempty"`
}

// FlowAggregatePairType defines model for flowAggregatePairType.
type FlowAggregatePairType string

// OperStatusType defines model for operStatusType.
type OperStatusType string

// PathID defines model for pathID.
type PathID = string

// GetAddressByID defines model for getAddressByID.
type GetAddressByID = AddressResponse

// GetAddresses defines model for getAddresses.
type GetAddresses = AddressListResponse

// GetConnectorByID defines model for getConnectorByID.
type GetConnectorByID = ConnectorResponse

// GetConnectors defines model for getConnectors.
type GetConnectors = ConnectorListResponse

// GetFlowAggregateByID defines model for getFlowAggregateByID.
type GetFlowAggregateByID = FlowAggregateResponse

// GetFlowAggregates defines model for getFlowAggregates.
type GetFlowAggregates = FlowAggregateListResponse

// GetListenerByID defines model for getListenerByID.
type GetListenerByID = ListenerResponse

// GetListeners defines model for getListeners.
type GetListeners = ListenerListResponse

// GetProcessByID defines model for getProcessByID.
type GetProcessByID = ProcessResponse

// GetProcesses defines model for getProcesses.
type GetProcesses = ProcessListResponse

// GetRouterAccess defines model for getRouterAccess.
type GetRouterAccess = RouterAccessListResponse

// GetRouterAccessByID defines model for getRouterAccessByID.
type GetRouterAccessByID = RouterAccessResponse

// GetRouterByID defines model for getRouterByID.
type GetRouterByID = RouterResponse

// GetRouterLinkByID defines model for getRouterLinkByID.
type GetRouterLinkByID = RouterLinkResponse

// GetRouterLinks defines model for getRouterLinks.
type GetRouterLinks = RouterLinkListResponse

// GetRouters defines model for getRouters.
type GetRouters = RouterListResponse

// GetSiteByID defines model for getSiteByID.
type GetSiteByID = SiteResponse

// GetSites defines model for getSites.
type GetSites = SiteListResponse

// NotSupported defines model for notSupported.
type NotSupported = ErrorResponse
